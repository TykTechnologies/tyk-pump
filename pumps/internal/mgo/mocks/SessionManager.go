// Code generated by mockery v2.10.0. DO NOT EDIT.

package mocks

import (
	mgo "github.com/TykTechnologies/tyk-pump/pumps/mongo/drivers/mgo"
	mock "github.com/stretchr/testify/mock"
)

// SessionManager is an autogenerated mock type for the SessionManager type
type SessionManager struct {
	mock.Mock
}

// Clone provides a mock function with given fields:
func (_m *SessionManager) Clone() mgo.SessionManager {
	ret := _m.Called()

	var r0 mgo.SessionManager
	if rf, ok := ret.Get(0).(func() mgo.SessionManager); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(mgo.SessionManager)
		}
	}

	return r0
}

// Close provides a mock function with given fields:
func (_m *SessionManager) Close() {
	_m.Called()
}

// Copy provides a mock function with given fields:
func (_m *SessionManager) Copy() mgo.SessionManager {
	ret := _m.Called()

	var r0 mgo.SessionManager
	if rf, ok := ret.Get(0).(func() mgo.SessionManager); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(mgo.SessionManager)
		}
	}

	return r0
}

// DB provides a mock function with given fields: name
func (_m *SessionManager) DB(name string) mgo.DatabaseManager {
	ret := _m.Called(name)

	var r0 mgo.DatabaseManager
	if rf, ok := ret.Get(0).(func(string) mgo.DatabaseManager); ok {
		r0 = rf(name)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(mgo.DatabaseManager)
		}
	}

	return r0
}

// Run provides a mock function with given fields: cmd, result
func (_m *SessionManager) Run(cmd interface{}, result interface{}) error {
	ret := _m.Called(cmd, result)

	var r0 error
	if rf, ok := ret.Get(0).(func(interface{}, interface{}) error); ok {
		r0 = rf(cmd, result)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
