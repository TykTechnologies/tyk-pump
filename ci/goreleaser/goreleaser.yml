# Generated by: gromit policy

# Check the documentation at http://goreleaser.com
# This project needs CGO_ENABLED=1 and the cross-compiler toolchains for
# - arm64
# - amd64
version: 2
builds:
  - id: std
    ldflags:
      - -X github.com/TykTechnologies/tyk-pump/pumps.Version={{.Version}}
      - -X github.com/TykTechnologies/tyk-pump/pumps.Commit={{.FullCommit}}
      - -X github.com/TykTechnologies/tyk-pump/pumps.BuildDate={{.Date}}
      - -X github.com/TykTechnologies/tyk-pump/pumps.BuiltBy=goreleaser
    goos:
      - linux
    goarch:
      - amd64
      - arm64
      - s390x
    binary: tyk-pump
  - id: fips
    ldflags:
      - -X github.com/TykTechnologies/tyk-pump/pumps.Version={{.Version}}
      - -X github.com/TykTechnologies/tyk-pump/pumps.Commit={{.FullCommit}}
      - -X github.com/TykTechnologies/tyk-pump/pumps.BuildDate={{.Date}}
      - -X github.com/TykTechnologies/tyk-pump/pumps.BuiltBy=goreleaser
    goos:
      - linux
    goarch:
      - amd64
    binary: tyk-pump
nfpms:
  - id: std
    vendor: "Tyk Technologies Ltd"
    homepage: "https://tyk.io"
    maintainer: "Tyk <info@tyk.io>"
    description: Tyk Analytics Pump to move analytics data from Redis to any supported back end (multiple back ends can be written to at once).
    package_name: tyk-pump
    file_name_template: "{{ .ConventionalFileName }}"
    builds:
      - std
    formats:
      - deb
      - rpm
    contents:
      - src: "README.md"
        dst: "/opt/share/docs/tyk-pump/README.md"
      - src: "ci/install/*"
        dst: "/opt/tyk-pump/install"
      - src: ci/install/inits/systemd/system/tyk-pump.service
        dst: /lib/systemd/system/tyk-pump.service
      - src: ci/install/inits/sysv/init.d/tyk-pump
        dst: /etc/init.d/tyk-pump
      - src: "LICENSE.md"
        dst: "/opt/share/docs/tyk-pump/LICENSE.md"
      - src: pump.example.conf
        dst: /opt/tyk-pump/pump.conf
        type: "config|noreplace"
    scripts:
      preinstall: "ci/install/before_install.sh"
      postinstall: "ci/install/post_install.sh"
      postremove: "ci/install/post_remove.sh"
    bindir: "/opt/tyk-pump"
    rpm:
      scripts:
        posttrans: ci/install/post_trans.sh
      signature:
        key_file: tyk.io.signing.key
    deb:
      signature:
        key_file: tyk.io.signing.key
        type: origin
  - id: fips
    vendor: "Tyk Technologies Ltd"
    homepage: "https://tyk.io"
    maintainer: "Tyk <info@tyk.io>"
    description: Tyk Analytics Pump to move analytics data from Redis to any supported back end (multiple back ends can be written to at once).
    package_name: tyk-pump-fips
    file_name_template: "{{ .ConventionalFileName }}"
    builds:
      - fips
    formats:
      - deb
      - rpm
    contents:
      - src: "README.md"
        dst: "/opt/share/docs/tyk-pump/README.md"
      - src: "ci/install/*"
        dst: "/opt/tyk-pump/install"
      - src: ci/install/inits/systemd/system/tyk-pump.service
        dst: /lib/systemd/system/tyk-pump.service
      - src: ci/install/inits/sysv/init.d/tyk-pump
        dst: /etc/init.d/tyk-pump
      - src: "LICENSE.md"
        dst: "/opt/share/docs/tyk-pump/LICENSE.md"
      - src: pump.example.conf
        dst: /opt/tyk-pump/pump.conf
        type: "config|noreplace"
    scripts:
      preinstall: "ci/install/before_install.sh"
      postinstall: "ci/install/post_install.sh"
      postremove: "ci/install/post_remove.sh"
    bindir: "/opt/tyk-pump"
    rpm:
      scripts:
        posttrans: ci/install/post_trans.sh
      signature:
        key_file: tyk.io.signing.key
    deb:
      signature:
        key_file: tyk.io.signing.key
        type: origin
publishers:
  - name: tyk-pump-unstable
    env:
      - PACKAGECLOUD_TOKEN={{ .Env.PACKAGECLOUD_TOKEN }}
    cmd: packagecloud publish --debvers "{{ .Env.DEBVERS }}" --rpmvers "{{ .Env.RPMVERS }}" tyk/tyk-pump-unstable {{ .ArtifactPath }}
# This disables archives
archives:
  - format: binary
    allow_different_binary_count: true
checksum:
  disable: true
release:
  disable: true
  github:
    owner: TykTechnologies
    name: tyk-pump
  prerelease: auto
  draft: true
  name_template: "{{.ProjectName}}-v{{.Version}}"
